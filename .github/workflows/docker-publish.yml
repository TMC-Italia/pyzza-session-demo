name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin

    - name: Build and push Docker images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/api_service:latest ./api
        docker build -t ${{ secrets.DOCKER_USERNAME }}/pdf_generator_service:latest ./services/pdf_generator
        docker build -t ${{ secrets.DOCKER_USERNAME }}/song_generator_service:latest ./services/song_generator
        docker build -t ${{ secrets.DOCKER_USERNAME }}/telegram_bot_service:latest ./services/telegram_bot

        docker push ${{ secrets.DOCKER_USERNAME }}/api_service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/pdf_generator_service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/song_generator_service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/telegram_bot_service:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    environment: prod
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Navigate to deployment directory
          cd /app

          # Fetch the correct docker-compose.yml from the repo
          curl -o docker-compose.yml https://raw.githubusercontent.com/TMC-Italia/pyzza-session-demo/refs/heads/master/docker-compose-prod.yaml

          # Pull updated Docker images
          docker compose pull

          # Restart services
          docker compose down --remove-orphans
          docker compose up -d --remove-orphans